[tool:pytest]
# APG Vendor Management - Pytest Configuration
# Comprehensive test configuration for vendor management capability

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = 
    tests/
    ../

# Minimum version
minversion = 7.0

# Add project root to Python path
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=..
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=85
    --asyncio-mode=auto

# Custom markers
markers =
    unit: Unit tests - fast, isolated tests
    integration: Integration tests - test component interactions
    e2e: End-to-end tests - full system workflows
    performance: Performance tests - load and stress testing
    ai: AI/ML specific tests - machine learning functionality
    security: Security tests - authentication, authorization, data protection
    slow: Slow running tests - tests that take >5 seconds
    database: Tests requiring database connection
    api: API endpoint tests
    ui: User interface tests
    smoke: Smoke tests - basic functionality verification

# Asyncio configuration
asyncio_mode = auto

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test timeout (in seconds)
timeout = 300

# Coverage configuration
[coverage:run]
source = ..
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */.*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov