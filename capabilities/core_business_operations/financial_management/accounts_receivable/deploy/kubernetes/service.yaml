# APG Accounts Receivable - Kubernetes Services
apiVersion: v1
kind: Service
metadata:
  name: apg-ar-api-service
  namespace: apg-ar
  labels:
    app.kubernetes.io/name: apg-accounts-receivable
    app.kubernetes.io/component: api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: apg-accounts-receivable
    app.kubernetes.io/component: api

---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: apg-ar
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: database

---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: apg-ar
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache

---
# NGINX Load Balancer Service
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: apg-ar
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: loadbalancer
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  selector:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: loadbalancer
  externalTrafficPolicy: Local

---
# Monitoring Services
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: apg-ar
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: monitoring
spec:
  type: ClusterIP
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: prometheus
  selector:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: monitoring

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: apg-ar
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: grafana
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: monitoring

---
# Headless service for StatefulSet (if using StatefulSet for database)
apiVersion: v1
kind: Service
metadata:
  name: postgres-headless
  namespace: apg-ar
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: database