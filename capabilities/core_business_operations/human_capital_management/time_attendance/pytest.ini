[tool:pytest]
# APG Time & Attendance Capability - Pytest Configuration
# Copyright Â© 2025 Datacraft

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Async support
asyncio_mode = auto

# Markers
markers =
    integration: Integration tests that require database or external services
    unit: Unit tests that test individual components in isolation
    performance: Performance and load testing
    security: Security and vulnerability testing
    slow: Tests that take more than 10 seconds to run
    api: API endpoint tests
    database: Database operation tests
    service: Service layer tests
    models: Model validation tests

# Output and formatting
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-branch
    --cov-fail-under=85
    --junitxml=junit.xml

# Minimum Python version
minversion = 3.12

# Test timeout (in seconds)
timeout = 300

# Directories to ignore
norecursedirs = 
    *.egg
    .eggs
    dist
    build
    docs
    .tox
    .git
    __pycache__
    .venv
    venv
    env
    ENV
    htmlcov
    .coverage
    .pytest_cache
    migrations/versions

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnraisableExceptionWarning
    ignore::sqlalchemy.exc.SAWarning

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = .
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */.venv/*
    */migrations/*
    */alembic/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml