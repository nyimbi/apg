# APG Time & Attendance Capability - Ingress
# Copyright Â© 2025 Datacraft

# NGINX Ingress Controller Configuration
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: time-attendance-ingress
  namespace: apg-time-attendance
  labels:
    app.kubernetes.io/name: apg-time-attendance
    app.kubernetes.io/component: ingress
    app.kubernetes.io/version: "1.0.0"
  annotations:
    # Basic ingress configuration
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    
    # SSL/TLS configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-rps: "100"
    nginx.ingress.kubernetes.io/rate-limit-burst-multiplier: "5"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://apg.datacraft.co.ke"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    
    # Performance optimization
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "4k"
    nginx.ingress.kubernetes.io/proxy-buffers: "8 4k"
    nginx.ingress.kubernetes.io/client-max-body-size: "10m"
    
    # Connection settings
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # WebSocket support
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/websocket-services: "time-attendance-app"
spec:
  tls:
  - hosts:
    - time-attendance.apg.datacraft.co.ke
    - api.time-attendance.apg.datacraft.co.ke
    secretName: time-attendance-tls
  rules:
  - host: time-attendance.apg.datacraft.co.ke
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: time-attendance-nginx
            port:
              number: 80
  - host: api.time-attendance.apg.datacraft.co.ke
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: time-attendance-app
            port:
              number: 8000
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: time-attendance-app
            port:
              number: 8000

---
# Internal API Ingress (for service-to-service communication)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: time-attendance-internal
  namespace: apg-time-attendance
  labels:
    app.kubernetes.io/name: apg-time-attendance
    app.kubernetes.io/component: internal-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx-internal"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
spec:
  rules:
  - host: time-attendance.internal.apg
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: time-attendance-app
            port:
              number: 8000
      - path: /health
        pathType: Exact
        backend:
          service:
            name: time-attendance-app
            port:
              number: 8000
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: time-attendance-app
            port:
              number: 9090

---
# Mobile API Ingress (optimized for mobile traffic)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: time-attendance-mobile
  namespace: apg-time-attendance
  labels:
    app.kubernetes.io/name: apg-time-attendance
    app.kubernetes.io/component: mobile-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Mobile-specific optimizations
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/client-max-body-size: "50m"  # Larger for photo uploads
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"   # Longer for mobile uploads
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    
    # Rate limiting for mobile (more lenient)
    nginx.ingress.kubernetes.io/rate-limit-rps: "50"
    nginx.ingress.kubernetes.io/rate-limit-burst-multiplier: "10"
    
    # Mobile-specific headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Mobile-Optimized "true" always;
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
spec:
  tls:
  - hosts:
    - mobile.time-attendance.apg.datacraft.co.ke
    secretName: time-attendance-mobile-tls
  rules:
  - host: mobile.time-attendance.apg.datacraft.co.ke
    http:
      paths:
      - path: /api/mobile
        pathType: Prefix
        backend:
          service:
            name: time-attendance-app
            port:
              number: 8000
      - path: /ws/mobile
        pathType: Prefix
        backend:
          service:
            name: time-attendance-app
            port:
              number: 8000