# APG API Service Mesh - Kubernetes Namespace
#
# Namespace configuration with resource quotas, network policies,
# and security context constraints.
#
# Â© 2025 Datacraft. All rights reserved.
# Author: Nyimbi Odero <nyimbi@gmail.com>

apiVersion: v1
kind: Namespace
metadata:
  name: apg-service-mesh
  labels:
    name: apg-service-mesh
    version: "1.0.0"
    component: service-mesh
    part-of: apg-platform
    managed-by: kubernetes
  annotations:
    description: "APG API Service Mesh namespace for intelligent service orchestration"
    contact: "nyimbi@gmail.com"
    documentation: "https://docs.datacraft.co.ke/apg-service-mesh"

---
# Resource Quota
apiVersion: v1
kind: ResourceQuota
metadata:
  name: apg-service-mesh-quota
  namespace: apg-service-mesh
spec:
  hard:
    # Compute resources
    requests.cpu: "8"
    requests.memory: 16Gi
    limits.cpu: "16"
    limits.memory: 32Gi
    
    # Storage resources
    requests.storage: 100Gi
    persistentvolumeclaims: "10"
    
    # Object counts
    pods: "50"
    services: "20"
    secrets: "20"
    configmaps: "20"
    replicationcontrollers: "0"
    deployments.apps: "10"
    statefulsets.apps: "5"
    jobs.batch: "10"
    cronjobs.batch: "5"

---
# Limit Range
apiVersion: v1
kind: LimitRange
metadata:
  name: apg-service-mesh-limits
  namespace: apg-service-mesh
spec:
  limits:
  - type: Container
    default:
      cpu: 500m
      memory: 1Gi
    defaultRequest:
      cpu: 100m
      memory: 256Mi
    max:
      cpu: "2"
      memory: 4Gi
    min:
      cpu: 50m
      memory: 128Mi
  - type: PersistentVolumeClaim
    max:
      storage: 50Gi
    min:
      storage: 1Gi

---
# Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: apg-service-mesh-network-policy
  namespace: apg-service-mesh
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Allow ingress from nginx ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  
  # Allow ingress from monitoring namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 9090
  
  # Allow internal communication within namespace
  - from:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379
  
  egress:
  # Allow egress to database
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  
  # Allow egress to Redis
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  
  # Allow egress to external services (DNS, HTTPS)
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80