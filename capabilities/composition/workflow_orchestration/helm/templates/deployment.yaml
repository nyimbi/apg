apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "apg-workflow.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "apg-workflow.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.hpa.enabled }}
  replicas: {{ .Values.app.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      {{- include "apg-workflow.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- if .Values.monitoring.prometheus.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.app.ports.metrics }}"
        prometheus.io/path: "/metrics"
        {{- end }}
        {{- if .Values.serviceMesh.istio.enabled }}
        sidecar.istio.io/inject: "{{ .Values.serviceMesh.istio.injection }}"
        {{- end }}
        {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "apg-workflow.selectorLabels" . | nindent 8 }}
        version: {{ .Values.app.version | quote }}
        {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "apg-workflow.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.security.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.security.securityContext | nindent 10 }}
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.app.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.app.ports.http }}
          protocol: TCP
        - name: websocket
          containerPort: {{ .Values.app.ports.websocket }}
          protocol: TCP
        {{- if .Values.monitoring.prometheus.enabled }}
        - name: metrics
          containerPort: {{ .Values.app.ports.metrics }}
          protocol: TCP
        {{- end }}
        env:
        # Kubernetes metadata
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        # Application configuration
        {{- range $key, $value := .Values.app.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        # Database configuration
        {{- if .Values.database.enabled }}
        {{- if .Values.database.external.enabled }}
        - name: DATABASE_HOST
          value: {{ .Values.database.external.host | quote }}
        - name: DATABASE_PORT
          value: {{ .Values.database.external.port | quote }}
        - name: DATABASE_NAME
          value: {{ .Values.database.external.database | quote }}
        - name: DATABASE_USER
          value: {{ .Values.database.external.username | quote }}
        {{- else }}
        - name: DATABASE_HOST
          value: "{{ include "apg-workflow.fullname" . }}-postgresql"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_NAME
          value: {{ .Values.database.postgresql.auth.database | quote }}
        - name: DATABASE_USER
          value: {{ .Values.database.postgresql.auth.username | quote }}
        {{- end }}
        {{- end }}
        # Redis configuration
        {{- if .Values.redis.enabled }}
        {{- if .Values.redis.external.enabled }}
        - name: REDIS_HOST
          value: {{ .Values.redis.external.host | quote }}
        - name: REDIS_PORT
          value: {{ .Values.redis.external.port | quote }}
        {{- else }}
        - name: REDIS_HOST
          value: "{{ include "apg-workflow.fullname" . }}-redis-master"
        - name: REDIS_PORT
          value: "6379"
        {{- end }}
        {{- end }}
        # Integration URLs
        {{- if .Values.integrations.apgPlatform.enabled }}
        - name: APG_PLATFORM_URL
          value: {{ .Values.integrations.apgPlatform.url | quote }}
        {{- end }}
        {{- if .Values.integrations.auth.enabled }}
        - name: AUTH_SERVICE_URL
          value: {{ .Values.integrations.auth.url | quote }}
        {{- end }}
        {{- if .Values.integrations.audit.enabled }}
        - name: AUDIT_SERVICE_URL
          value: {{ .Values.integrations.audit.url | quote }}
        {{- end }}
        envFrom:
        - secretRef:
            name: {{ include "apg-workflow.fullname" . }}-secrets
        volumeMounts:
        {{- if .Values.storage.data.enabled }}
        - name: data-storage
          mountPath: /app/data
        {{- end }}
        {{- if .Values.storage.models.enabled }}
        - name: models-storage
          mountPath: /app/models
        {{- end }}
        {{- if .Values.storage.templates.enabled }}
        - name: templates-storage
          mountPath: /app/templates
        {{- end }}
        - name: temp-storage
          mountPath: /tmp
        - name: logs-storage
          mountPath: /app/logs
        resources:
          {{- toYaml .Values.app.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /startup
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
      volumes:
      {{- if .Values.storage.data.enabled }}
      - name: data-storage
        persistentVolumeClaim:
          claimName: {{ include "apg-workflow.fullname" . }}-data-pvc
      {{- end }}
      {{- if .Values.storage.models.enabled }}
      - name: models-storage
        persistentVolumeClaim:
          claimName: {{ include "apg-workflow.fullname" . }}-models-pvc
      {{- end }}
      {{- if .Values.storage.templates.enabled }}
      - name: templates-storage
        persistentVolumeClaim:
          claimName: {{ include "apg-workflow.fullname" . }}-templates-pvc
      {{- end }}
      - name: temp-storage
        emptyDir:
          sizeLimit: 1Gi
      - name: logs-storage
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.ha.podAntiAffinity.enabled }}
      affinity:
        podAntiAffinity:
          {{- if eq .Values.ha.podAntiAffinity.type "required" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- end }}
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ include "apg-workflow.name" . }}
              topologyKey: kubernetes.io/hostname
      {{- end }}

---
{{- if .Values.nginx.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "apg-workflow.fullname" . }}-nginx
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "apg-workflow.labels" . | nindent 4 }}
    app.kubernetes.io/component: proxy
spec:
  replicas: {{ .Values.nginx.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "apg-workflow.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: proxy
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.nginx.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9113"
        prometheus.io/path: "/metrics"
        {{- end }}
      labels:
        {{- include "apg-workflow.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: proxy
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
      containers:
      - name: nginx
        image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
        resources:
          {{- toYaml .Values.nginx.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
      {{- if .Values.nginx.metrics.enabled }}
      - name: nginx-exporter
        image: "{{ .Values.nginx.metrics.image.repository }}:{{ .Values.nginx.metrics.image.tag }}"
        args:
        - -nginx.scrape-uri=http://localhost/nginx_status
        ports:
        - name: metrics
          containerPort: 9113
          protocol: TCP
        resources:
          {{- toYaml .Values.nginx.metrics.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      {{- end }}
      volumes:
      - name: nginx-config
        configMap:
          name: {{ include "apg-workflow.fullname" . }}-nginx-config
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
{{- end }}