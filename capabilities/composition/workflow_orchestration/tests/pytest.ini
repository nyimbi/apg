[tool:pytest]
# APG Workflow Orchestration Pytest Configuration

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=../
    --cov-report=html:coverage_html
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-fail-under=95
    --cov-branch
    --asyncio-mode=auto
    --timeout=30

# Markers
markers =
    unit: Unit tests
    integration: Integration tests  
    performance: Performance tests
    slow: Slow running tests
    database: Tests requiring database
    redis: Tests requiring Redis
    api: API endpoint tests
    engine: Workflow engine tests
    service: Service layer tests
    management: Management layer tests
    security: Security tests
    apg: APG integration tests

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning

# Asyncio configuration
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = ..
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */virtualenv/*
    */.venv/*
    */conftest.py
    */migrations/*
    */alembic/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    pass
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = True
skip_covered = False
sort = Cover

[coverage:html]
directory = coverage_html