# APG Event Streaming Bus - Kubernetes Secrets
# Sensitive configuration data for the event streaming bus
# Â© 2025 Datacraft. All rights reserved.

apiVersion: v1
kind: Secret
metadata:
  name: esb-secrets
  namespace: apg-event-streaming-bus
  labels:
    app.kubernetes.io/name: event-streaming-bus
    app.kubernetes.io/instance: apg-esb
    app.kubernetes.io/component: secret
type: Opaque
data:
  # Database credentials (base64 encoded)
  # Default values for development - CHANGE IN PRODUCTION
  database-url: cG9zdGdyZXNxbDovL2VzYl91c2VyOmVzYl9wYXNzd29yZEBwb3N0Z3JlczozNTIzMi9hcGdfZXZlbnRfc3RyZWFtaW5nX2J1cw==
  database-user: ZXNiX3VzZXI=
  database-password: ZXNiX3Bhc3N3b3Jk
  database-name: YXBnX2V2ZW50X3N0cmVhbWluZ19idXM=
  
  # Redis credentials
  redis-url: cmVkaXM6Ly86Y2hhbmdlbWVAcmVkaXM6NjM3OS8w
  redis-password: Y2hhbmdlbWU=
  
  # Kafka credentials (if SASL is enabled)
  kafka-bootstrap-servers: a2Fma2E6OTA5Mg==
  kafka-username: a2Fma2FfdXNlcg==
  kafka-password: a2Fma2FfcGFzc3dvcmQ=
  
  # JWT secret key
  jwt-secret-key: eW91ci1zdXBlci1zZWNyZXQtand0LWtleS1jaGFuZ2UtaW4tcHJvZHVjdGlvbg==
  
  # Encryption keys
  encryption-key: eW91ci0zMi1ieXRlLWVuY3J5cHRpb24ta2V5LWhlcmU=
  
  # External API keys
  monitoring-api-key: bW9uaXRvcmluZy1hcGkta2V5LWhlcmU=
  tracing-api-key: dHJhY2luZy1hcGkta2V5LWhlcmU=
  
  # TLS certificates (if needed)
  tls-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
  tls-key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t

---
# Database Secret for PostgreSQL
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: apg-event-streaming-bus
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: apg-esb-postgres
    app.kubernetes.io/component: secret
type: Opaque
data:
  # PostgreSQL credentials (base64 encoded)
  postgres-user: ZXNiX3VzZXI=
  postgres-password: ZXNiX3Bhc3N3b3Jk
  postgres-db: YXBnX2V2ZW50X3N0cmVhbWluZ19idXM=
  postgres-root-password: cm9vdF9wYXNzd29yZA==

---
# Redis Secret
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: apg-event-streaming-bus
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: apg-esb-redis
    app.kubernetes.io/component: secret
type: Opaque
data:
  # Redis credentials (base64 encoded)
  redis-password: Y2hhbmdlbWU=

---
# Kafka Secret (for SASL authentication)
apiVersion: v1
kind: Secret
metadata:
  name: kafka-secret
  namespace: apg-event-streaming-bus
  labels:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: apg-esb-kafka
    app.kubernetes.io/component: secret
type: Opaque
data:
  # Kafka SASL credentials (base64 encoded)
  kafka-username: a2Fma2FfdXNlcg==
  kafka-password: a2Fma2FfcGFzc3dvcmQ=
  
  # Kafka TLS certificates
  kafka-ca-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
  kafka-client-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
  kafka-client-key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t

---
# External Service Secrets
apiVersion: v1
kind: Secret
metadata:
  name: external-services-secret
  namespace: apg-event-streaming-bus
  labels:
    app.kubernetes.io/name: event-streaming-bus
    app.kubernetes.io/component: external-secrets
type: Opaque
data:
  # Monitoring service API keys
  prometheus-api-key: cHJvbWV0aGV1cy1hcGkta2V5
  grafana-api-key: Z3JhZmFuYS1hcGkta2V5
  jaeger-api-key: amFlZ2VyLWFwaS1rZXk=
  
  # External webhook URLs
  slack-webhook-url: aHR0cHM6Ly9ob29rcy5zbGFjay5jb20vc2VydmljZXMvVEVTVF9VUkw=
  teams-webhook-url: aHR0cHM6Ly9vdXRsb29rLm9mZmljZS5jb20vd2ViaG9vay9URVNUX1VSTD0=
  
  # Cloud provider credentials
  aws-access-key-id: QVdTX0FDQ0VTU19LRVlfSUQ=
  aws-secret-access-key: QVdTX1NFQ1JFVF9BQ0NFU1NfS0VZ
  azure-client-id: QVpVUkVfQ0xJRU5UX0lE
  azure-client-secret: QVpVUkVfQ0xJRU5UX1NFQ1JFVA==
  gcp-service-account-key: R0NQX1NFUlZJQ0VfQUNDT1VOVF9LRVk=

---
# TLS Secret for HTTPS/SSL
apiVersion: v1
kind: Secret
metadata:
  name: esb-tls-secret
  namespace: apg-event-streaming-bus
  labels:
    app.kubernetes.io/name: event-streaming-bus
    app.kubernetes.io/component: tls-secret
type: kubernetes.io/tls
data:
  # TLS certificate and key (base64 encoded)
  # These should be replaced with actual certificates in production
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYVENDQWtXZ0F3SUJBZ0lKQUlHM0Y2dmZnTktjTUEwR0NTcUdTSWIzRFFFQkN3VUFNRUl4Q3pBSkJnTlYKQkFZVEFsVlRNUXN3Q1FZRFZRUUlEQUpOUVRFaE1COEdBMVVFQnd3WVEyOXNiRzl5WVdSdklGTndjbWx1WjNNZwpRbTV1YVdkb2RERUxNQWtHQTFVRUNnd0NRbTFoZGpBZUZ3MHlOREEwTURReE9ESXpNelphRncweU5EQTFNRFF4Ck9ESXpNelphTUVJeEN6QUpCZ05WQkFZVEFsVlRNUXN3Q1FZRFZRUUlEQUpOUVRFaE1COEdBMVVFQnd3WVEyOXMKYkc5eVlXUmZJRk53Y21sdVozTWdRbTV1YVdkb2RERUxNQWtHQTFVRUNnd0NRbTFoZGpDQ0FTSXdEUVlKS29aSQpodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUw0SFJSK2RVYllmU3Q1ejQzWitZR1RmNnpqaHNjWWN0aGNaCmU5aWdaajg1REJGdE14QWNwNmI5RDZnQ2x1YU5NUnNxREt2RGl2eDFOUFVnYlpEWmZjc0RXZklJNjIxaEJCWGEKNWgyZGxqTElRM3FiWnFnblUrekFMWWt6VHNlR3JKWHc3VXFJbTZ0Wm8zY3pWVFR5eWFXYlhzR09kK1FYWStCMApzRGlrTnMzbVgweWtnRmNOODdwT3VWaGFOUkJCSWlRNCs1VEFwWTdleWNzNTliWnlVYUlVbGp4bDVvWXJZN00zClA5RjBmczNnOTJEa2lSN2IwM1VFa3RkZzF1eHFyVjhVaDBHTms2Sm44SW5WQ1piWmVBK3ErOFcxOUdnWVgvclUKVDVRYUlzbFlBQ2lBZGFpZGR3RTR1amN0TVFWZEFjNWhxVnR1SHNOTXQrSUlrRUVDQXdFQUFhTlFNRTR3SFFZRApWUjBPQkJZRUZQT3N2aUFEUWpLMXRVY1lwTStxVGZyTU1QaGhNQjhHQTFVZEl3UVlNQmFBRlBPc3ZpQURRaksxCnRVY1lwTStxVGZyTU1QaGhNQXdHQTFVZEV3UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGME4KRm5oRkI1WllOUUE1eUNqSGV4RU1lbTVTajVZTGp0Q1dGdzVGM0J6MWFlSktBNGx1VTI4V1d1Q0dRajQrWXBOWgprQlQ1VXY4dmlPNU1wbm1qSXI3UUYyVVkzV2lUb3VJSkJQNElFNnlwbkoyZG9FTmJQdGJmczF5T1F0M0xRRGNTCk1pbE9rRXVDTSs2a2JINk5nWWxvemJNVE5Gc0VQbW16RGZEMnhOdEFMRFE4c2g0eWdGUFpJaGN5SWJwTzZUeHEKMGxtdnhBZHBkWEo5ejVHb0RIOTVyU205bGVIaXdIZXFxYlhGYXZIcm5sUHpseUd3T0M0K0M1c3g1NjZINGZ5bgpmM1F6R1dLQ2dGcnRIM2ZSUHdBcEpJRVpGdDBmaWZ5SEpjVDFnYmVlUEFyRGE5bGJGRDJSek5mSE1NUERINWJICno4SmxNZGJKQ01CNzV4OGpGUDQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQytCMFVmblZHMkgwcmUKYytOMmZtQmszK3M0NGJIR0hMWVhHWHZZb0dZL09Rd1JiVE1RSEZRY1NmeTJvQXBibWpURWJLZ3lydzRyOGRUVAoxSUcyUTJYM0xBMW55Q090dFlRUVYydVlkblpZeXlFTjZtMmFvSjFQc3dDMkpNMDdIaHF5VjhPMUtpSnVyV2FOCjNNMVUwOHNtbG0xN0JqbmZrRjJQZ2RMSQV0RGJONWw5TXBJQLHEZTY3cU9VVmhzaUJCZUlrT1B1VXdLV08zc24KTE9mVzJjbEdpRkpZOFplYUdLMk96TnovUmRIN04tUGRnNUlrZTI5TjFCSkxYWU5ic2FxMWZGSWRCalJPaVovQwpKMVFtVzJYZ1BxdnZGdGZSb0dGL3YxRStVR2lMSlNBQW9nSFdvblhjQk9MbzNMVEVGWFFIT1lhbGJiaDE3RFRMCmZpQ0pCQkFnTUJBQUVDZ2dFQVJRalJSOEY3dzdUMGFqaXVKZnhkZlF5N3ZxaXk4WkhQMC9HdGEzYytrOGFJYWcKbVExY2xFOVN6aHQ3eGVPK1l6dnMzM1ZEYzIxUjJmRzBkYnRzNGtEOFErK1ZtQmFqQ25kK3hUK0JyNFBDNTFEMQp5L2k5dFdabUc2Q2d6TVJISmJJNWMzUzNGa1VqV3NPcWhGeGJwNkJlRk1uS3ZiZVE5VUIvTlcvRUNJdzE5TkZOCkNKRmpIZ2dVUGcyR21ucGNFdXMyOUF3S0hLRmpVYUNzSUNaUkhZOFcvcmdFREk0NXY2eGhjY1VWdlEzeFFoUVIKQllIRnIwZWNnZkVVQkM5b2pxdkF6dHJ2dXhoRjY4V3BZc1Y0VVY3RzF0R0toSFozRG5pOFNYQUdXRXBPNFFsMwp4Mkpmcm9xRGhWNVhxR0tmMVZHaGRlcHE4cXJEYit3bW9sNGRHRUtnNlFLQmdRRGVnVkh6L3JCZGl1dEpOdE5vCjZEdUtOQnJ0UEV0aEVrNVVabzB3U1JOZFhjTGJjckNEZ0s1d0RhM2tpQWdZdmJYVkNzcGx0cW5ISTE0N0xuRUEKNm9CVUZKNTZzRGtEMjE4T1hUKzJoR0tJeGVvKzVTM01TM2l1MW9wOHE5UFBsT1hhQXZ1dkhCaE1nZUt6Z1FjeQpLV3YwZmhNK0NlZHdpZWVFN1lLSkVFYmk4UUtCZ1FEWkFpb0duaGI4THQ5TWJ3RUs1SHZEV2VLcDJEZGJ5M2U0CkgzakZjV1J5VFJzSjY5eWRXQVEzNThOeWNiZThGOGNPZ3hJZkNzUWdXVHZZd3BqcCsrYkFicHJRdlN5SXJIcnQKeDlCdEVWQ2l1YnZHcS96V1hwdCtLcDU2dGlGUllXZE5kMy95VzNqUDBCOGJKR0Y5Y0Z6VHVCcTVlVlAzQUJkUApqc1VHRWs1U0Z3S0JnUUNkSjNwVFllbldqMEdpQ29VYUdNRVl5QlVTb0FCRCtOTGZwWTZ1SU5SQjJ5b1FMcFZaCjkyVjFLcmZtMnhFM05lUWg4cU90Z3grWmJzYm5FOVhBNStwaXE1THNmdU5rUFhPUllnZU1GNXRjQ3FsU3FYZlYKdTZaTFdPUWlRdks3VkVOUmlKYzU5bHVWOGNENE10dDArTEhyT25RdGRtSUNIYWlxc1lzTXlRIUJnQXhnK29CcgpGUElBaWRmd0JWWnNCZDI5MGVGT3FOb0tnOHowMWpKWjd1eUpPRGxPOElyV1pnNjFIYjhOVWIrR0ZSWkhZQzZ4Ck9aeWhFVyt6TmJVQThSZmFxcFRLcGFrZHF0c2U0WjQ2NGgzVkMxMml3VmtwZkltMHJtT3ozYUJyMHhrQ3dBakIKODZZOElGRElmeFdYWnVnMk0xbVF6TjNNeGIzUzNPK1lEMXlCdmdEZjRRS0JnUUNSZFlKKzdYMFUzSnJ6aHBmVgpqeWRGWm42YnF4V1lmN3FEOC9sU1JDUDY4SjFqUWsrMFNNNGJJeUdSOGJWTmgxR0U4aGtydGxlbkFFUG1FaXg3CmwzNmtidHF0V1hoSE9rOHIzTHZyRGlCQ2svOU8yOWllSy84NXBabW1CZERkMzliUWJuM1RkSmxrcE44VmxrM08KLy9Vb0xjWUpKNmgxT0xvTUQ4SEs3MU0vTUE9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t