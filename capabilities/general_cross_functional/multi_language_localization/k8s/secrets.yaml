# APG Multi-language Localization - Kubernetes Secrets
#
# Secure configuration management for sensitive data including API keys,
# database credentials, and encryption keys
#
# Author: Nyimbi Odero
# Company: Datacraft
# Copyright: Â© 2025 Datacraft. All rights reserved.
#
# NOTE: This file contains example/template values. In production:
# 1. Use external secret management (e.g., HashiCorp Vault, AWS Secrets Manager)
# 2. Apply secrets via CI/CD pipeline with proper encryption
# 3. Never commit actual secrets to version control
# 4. Rotate secrets regularly according to security policy

apiVersion: v1
kind: Secret
metadata:
  name: localization-secrets
  namespace: localization
  labels:
    app.kubernetes.io/name: multi-language-localization
    app.kubernetes.io/component: secrets
    app.kubernetes.io/part-of: apg-platform
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/version: "1.0.0"
type: Opaque
data:
  # Database Configuration (base64 encoded)
  # Format: postgresql+asyncpg://username:password@host:port/database
  database-url: cG9zdGdyZXNxbCthc3luY3BnOi8vbG9jYWxpemF0aW9uX3VzZXI6c2VjdXJlX3Bhc3N3b3JkQGxvY2FsaXphdGlvbi1kYjo1NDMyL2xvY2FsaXphdGlvbg==
  
  # Database credentials (individual components)
  db-username: bG9jYWxpemF0aW9uX3VzZXI=
  db-password: c2VjdXJlX3Bhc3N3b3Jk
  db-name: bG9jYWxpemF0aW9u
  
  # Redis Configuration
  # Format: redis://username:password@host:port/db
  redis-url: cmVkaXM6Ly86cmVkaXNfcGFzc3dvcmRAbG9jYWxpemF0aW9uLXJlZGlzOjYzNzkvMA==
  redis-password: cmVkaXNfcGFzc3dvcmQ=
  
  # Application Security Keys
  secret-key: eW91cl9zdXBlcl9zZWNyZXRfa2V5X2NoYW5nZV9pbl9wcm9kdWN0aW9u
  jwt-secret: and0X3NlY3JldF9rZXlfY2hhbmdlX2luX3Byb2R1Y3Rpb24=
  encryption-key: ZW5jcnlwdGlvbl9rZXlfY2hhbmdlX2luX3Byb2R1Y3Rpb24=
  
  # Translation Service API Keys
  google-translate-api-key: ""  # Add your Google Translate API key (base64 encoded)
  azure-translator-key: ""      # Add your Azure Translator key (base64 encoded)
  azure-translator-region: ""   # Add your Azure region (base64 encoded)
  deepl-api-key: ""            # Add your DeepL API key (base64 encoded)
  amazon-translate-access-key: ""  # Add your AWS access key (base64 encoded)
  amazon-translate-secret-key: ""  # Add your AWS secret key (base64 encoded)
  amazon-translate-region: ""      # Add your AWS region (base64 encoded)
  
  # APG Platform Integration
  apg-api-key: YXBnX2FwaV9rZXlfY2hhbmdlX2luX3Byb2R1Y3Rpb24=
  apg-webhook-secret: YXBnX3dlYmhvb2tfc2VjcmV0X2NoYW5nZV9pbl9wcm9kdWN0aW9u
  
  # External Service Integration
  sentry-dsn: ""               # Add your Sentry DSN (base64 encoded)
  slack-webhook-url: ""        # Add your Slack webhook URL (base64 encoded)
  smtp-password: ""            # Add your SMTP password (base64 encoded)
  
  # OAuth/OIDC Configuration
  oauth-client-id: ""          # Add your OAuth client ID (base64 encoded)
  oauth-client-secret: ""      # Add your OAuth client secret (base64 encoded)
  
  # File Storage Credentials (S3, etc.)
  s3-access-key: ""           # Add your S3 access key (base64 encoded)
  s3-secret-key: ""           # Add your S3 secret key (base64 encoded)
  s3-bucket-name: ""          # Add your S3 bucket name (base64 encoded)
  
  # SSL/TLS Certificates
  tls-cert: ""                # Add your TLS certificate (base64 encoded)
  tls-key: ""                 # Add your TLS private key (base64 encoded)

---
# Database initialization secret
apiVersion: v1
kind: Secret
metadata:
  name: localization-db-init
  namespace: localization
  labels:
    app.kubernetes.io/name: multi-language-localization
    app.kubernetes.io/component: db-init
type: Opaque
data:
  # PostgreSQL superuser password
  postgres-password: cG9zdGdyZXNfc3VwZXJfcGFzc3dvcmQ=
  
  # Database initialization script
  init-db.sql: |
    LS0gQVBHIE11bHRpLWxhbmd1YWdlIExvY2FsaXphdGlvbiAtIERhdGFiYXNlIEluaXRpYWxpemF0aW9u
    CkNSRUFURSBVU0VSIGxvY2FsaXphdGlvbl91c2VyIFdJVEggUEFTU1dPUkQgJ3NlY3VyZV9wYXNz
    d29yZCc7CkNSRUFURSBEQVRBQkFTRSBsb2NhbGl6YXRpb24gT1dORVIgbG9jYWxpemF0aW9uX3Vz
    ZXI7CkdSQU5UIEFMTCBQUklWSUxFR0VTIE9OIERBVEFCQVNFIGxvY2FsaXphdGlvbiBUTyBsb2Nh
    bGl6YXRpb25fdXNlcjsKXGMgbG9jYWxpemF0aW9uCkNSRUFURSBFWFRFTlNJT04gSUYgTk9UIEVY
    SVNUUyAidXVpZC1vc3NwIjsKQ1JFQVRFIEVYVEVOU0lPTiBJRiBOT1QgRVhJU1RTICJwZ2NyeXB0
    byI7CkNSRUFURSBFWFRFTlNJT04gSUYgTk9UIEVYSVNUUyAidW5hY2NlbnQiOw==

---
# Backup credentials secret
apiVersion: v1
kind: Secret
metadata:
  name: localization-backup-secrets
  namespace: localization
  labels:
    app.kubernetes.io/name: multi-language-localization
    app.kubernetes.io/component: backup
type: Opaque
data:
  # Backup storage credentials
  backup-s3-access-key: ""    # Add your backup S3 access key (base64 encoded)
  backup-s3-secret-key: ""    # Add your backup S3 secret key (base64 encoded)
  backup-s3-bucket: ""        # Add your backup S3 bucket (base64 encoded)
  backup-encryption-key: ""   # Add your backup encryption key (base64 encoded)

---
# Monitoring secrets
apiVersion: v1
kind: Secret
metadata:
  name: localization-monitoring-secrets
  namespace: localization
  labels:
    app.kubernetes.io/name: multi-language-localization
    app.kubernetes.io/component: monitoring
type: Opaque
data:
  # Grafana admin credentials
  grafana-admin-password: Z3JhZmFuYV9hZG1pbl9wYXNzd29yZA==
  
  # Alertmanager configuration
  alertmanager-webhook-url: ""  # Add your alertmanager webhook URL (base64 encoded)
  
  # Prometheus remote write credentials (if using external storage)
  prometheus-remote-write-username: ""  # Add username (base64 encoded)
  prometheus-remote-write-password: ""  # Add password (base64 encoded)

---
# TLS Secret for HTTPS
apiVersion: v1
kind: Secret
metadata:
  name: localization-tls
  namespace: localization
  labels:
    app.kubernetes.io/name: multi-language-localization
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # TLS certificate and key (base64 encoded)
  # Generate using: kubectl create secret tls localization-tls --cert=path/to/tls.crt --key=path/to/tls.key
  tls.crt: ""  # Add your TLS certificate
  tls.key: ""  # Add your TLS private key

---
# Registry pull secret (if using private container registry)
apiVersion: v1
kind: Secret
metadata:
  name: localization-registry-secret
  namespace: localization
  labels:
    app.kubernetes.io/name: multi-language-localization
    app.kubernetes.io/component: registry
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5leGFtcGxlLmNvbSI6eyJ1c2VybmFtZSI6InJlZ2lzdHJ5X3VzZXIiLCJwYXNzd29yZCI6InJlZ2lzdHJ5X3Bhc3N3b3JkIiwiYXV0aCI6ImNtVm5hWE4wY25sZmRYTmxjanB5WldkcGMzUnllVjl3WVhOemQyOXlaQT09In19fQ==