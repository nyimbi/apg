[tool:pytest]
# Pytest configuration for APG Notification System

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Async support
asyncio_mode = auto

# Output configuration
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10
    --maxfail=10

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    performance: marks tests as performance tests
    external: marks tests that require external services
    unit: marks tests as unit tests
    security: marks tests related to security functionality
    analytics: marks tests related to analytics functionality
    geofencing: marks tests related to geofencing functionality
    personalization: marks tests related to personalization functionality

# Filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*ssl.*:UserWarning
    ignore:.*asyncio.*:DeprecationWarning

# Minimum version
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Coverage configuration
[coverage:run]
source = ../
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml