"""
Vulnerability Scanning Models
=============================

Database models for Vulnerability Scanning capability.
"""

from flask_appbuilder import Model
from flask_appbuilder.models.mixins import AuditMixin
from sqlalchemy import Column, Integer, String, Boolean, DateTime, Float, Text, ForeignKey, JSON
from sqlalchemy.orm import relationship
from datetime import datetime


class SecurityBaseModel(AuditMixin, Model):
	"""Base model for security entities"""
	__abstract__ = True
	
	created_at = Column(DateTime, default=datetime.utcnow)
	updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)
	active = Column(Boolean, default=True)


# Add security-specific models based on capability

# Generic security model
class SecurityEvent(SecurityBaseModel):
	"""Generic security event tracking"""
	__tablename__ = 'security_events'
	
	id = Column(Integer, primary_key=True)
	event_type = Column(String(64), nullable=False)
	severity = Column(String(32), default='info')
	user_id = Column(Integer)
	resource = Column(String(256))
	action = Column(String(64))
	timestamp = Column(DateTime, default=datetime.utcnow)
	ip_address = Column(String(45))
	details = Column(JSON)
	resolved = Column(Boolean, default=False)

