"""
Time Series Forecasting Models
==============================

Database models for Time Series Forecasting capability.
"""

from flask_appbuilder import Model
from flask_appbuilder.models.mixins import AuditMixin
from sqlalchemy import Column, Integer, String, Boolean, DateTime, Float, Text, ForeignKey, JSON
from sqlalchemy.orm import relationship
from datetime import datetime


class AIBaseModel(AuditMixin, Model):
    """Base model for AI entities"""
    __abstract__ = True
    
    created_at = Column(DateTime, default=datetime.utcnow)
    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)


# Add AI-specific models based on capability

class TimeSeries(AIBaseModel):
    """Time series data model"""
    __tablename__ = 'timeseries_data'
    
    id = Column(Integer, primary_key=True)
    series_name = Column(String(256), nullable=False)
    timestamp = Column(DateTime, nullable=False)
    value = Column(Float, nullable=False)
    metadata = Column(JSON)
    
    forecasts = relationship("Forecast", back_populates="series")


class Forecast(AIBaseModel):
    """Time series forecast"""
    __tablename__ = 'timeseries_forecasts'
    
    id = Column(Integer, primary_key=True)
    series_id = Column(Integer, ForeignKey('timeseries_data.id'))
    forecast_date = Column(DateTime, nullable=False)
    predicted_value = Column(Float)
    confidence_lower = Column(Float)
    confidence_upper = Column(Float)
    model_used = Column(String(128))
    
    series = relationship("TimeSeries", back_populates="forecasts")

