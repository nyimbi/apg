"""
Reporting Engine Models
=======================

Database models for Reporting Engine capability.
"""

from flask_appbuilder import Model
from flask_appbuilder.models.mixins import AuditMixin
from sqlalchemy import Column, Integer, String, Boolean, DateTime, Float, Text, ForeignKey, JSON
from sqlalchemy.orm import relationship
from datetime import datetime


class BIBaseModel(AuditMixin, Model):
    """Base model for BI entities"""
    __abstract__ = True
    
    created_at = Column(DateTime, default=datetime.utcnow)
    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)


# Add BI-specific models based on capability

class Report(BIBaseModel):
    """Report definition model"""
    __tablename__ = 'bi_reports'
    
    id = Column(Integer, primary_key=True)
    name = Column(String(256), nullable=False)
    description = Column(Text)
    query = Column(Text)
    template_path = Column(String(512))
    output_format = Column(String(32))
    
    schedules = relationship("ReportSchedule", back_populates="report")


class ReportSchedule(BIBaseModel):
    """Report scheduling model"""
    __tablename__ = 'bi_report_schedules'
    
    id = Column(Integer, primary_key=True)
    report_id = Column(Integer, ForeignKey('bi_reports.id'))
    cron_expression = Column(String(128))
    recipients = Column(Text)  # JSON array of email addresses
    last_run = Column(DateTime)
    next_run = Column(DateTime)
    active = Column(Boolean, default=True)
    
    report = relationship("Report", back_populates="schedules")

