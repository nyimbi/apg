"""
Configuration for {{project_name}}
==================================

Generated by APG with composable capabilities.
"""

import os
from flask_appbuilder.security.manager import AUTH_DB

# Base directory
basedir = os.path.abspath(os.path.dirname(__file__))

# Core configuration
SECRET_KEY = os.environ.get('SECRET_KEY') or '{{secret_key}}'
SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL') or '{{database_url}}'

# Flask-AppBuilder configuration
APP_NAME = "{{project_name}}"
APP_THEME = ""
APP_ICON = ""

# Authentication
AUTH_TYPE = AUTH_DB
AUTH_ROLE_ADMIN = 'Admin'
AUTH_ROLE_PUBLIC = 'Public'

# Security
CSRF_ENABLED = True
WTF_CSRF_ENABLED = True

# Database
SQLALCHEMY_TRACK_MODIFICATIONS = False
SQLALCHEMY_POOL_PRE_PING = True

# Capability-specific configuration
{% for capability in capabilities %}
# Configuration for {{capability}} capability
{{capability.upper()}}_ENABLED = True
{% endfor %}

# Development/Production settings
DEBUG = os.environ.get('FLASK_DEBUG', '0') == '1'
TESTING = False

# Logging configuration
LOGGING_CONFIG = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'default': {
            'format': '[%(asctime)s] %(levelname)s in %(module)s: %(message)s',
        }
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'default'
        }
    },
    'root': {
        'level': 'INFO',
        'handlers': ['console']
    }
}
